FUNCTION
mainSEMICOLON
BEGIN_PARAMS
END_PARAMS
BEGIN_LOCALS
nCOLON
INTEGER
SEMICOLON
iCOMMA
jCOMMA
kCOLON
INTEGER
SEMICOLON
tCOLON
ARRAY
L_SQUARE_BRACKET
20R_SQUARE_BRACKET
OF
INTEGER
SEMICOLON
END_LOCALS
BEGIN_BODY
READ
iCOMMA
jSEMICOLON
kASSIGN
0SEMICOLON
nASSIGN
20SEMICOLON
DO
BEGINLOOP
tL_SQUARE_BRACKET
kR_SQUARE_BRACKET
ASSIGN
kSEMICOLON
kASSIGN
kADD
1SEMICOLON
IF
kMOD
2EQ
0THEN
CONTINUE
SEMICOLON
ENDIF
SEMICOLON
WRITE
tL_SQUARE_BRACKET
kSUB
1R_SQUARE_BRACKET
SEMICOLON
ENDLOOP
WHILE
kLT
nSEMICOLON
IF
iLT
jAND
jLT
nAND
iGTE
0THEN
tL_SQUARE_BRACKET
iR_SQUARE_BRACKET
ASSIGN
iMULT
2SEMICOLON
tL_SQUARE_BRACKET
jR_SQUARE_BRACKET
ASSIGN
jMULT
2SEMICOLON
kASSIGN
tL_SQUARE_BRACKET
iR_SQUARE_BRACKET
SEMICOLON
tL_SQUARE_BRACKET
iR_SQUARE_BRACKET
ASSIGN
tL_SQUARE_BRACKET
jR_SQUARE_BRACKET
SEMICOLON
tL_SQUARE_BRACKET
jR_SQUARE_BRACKET
ASSIGN
kSEMICOLON
ELSE
WHILE
iGTE
jOR
FALSE
BEGINLOOP
kASSIGN
L_PAREN
1ADD
iSUB
jR_PAREN
MOD
3SEMICOLON
iASSIGN
iSUB
1SEMICOLON
IF
kGT
1THEN
CONTINUE
SEMICOLON
ENDIF
SEMICOLON
WRITE
kSEMICOLON
ENDLOOP
SEMICOLON
ENDIF
SEMICOLON
WRITE
iCOMMA
jCOMMA
kSEMICOLON
IF
iLT
nAND
iGTE
0THEN
WRITE
tL_SQUARE_BRACKET
iR_SQUARE_BRACKET
SEMICOLON
ENDIF
SEMICOLON
IF
jLT
nAND
jGTE
0THEN
WRITE
tL_SQUARE_BRACKET
jR_SQUARE_BRACKET
SEMICOLON
ENDIF
SEMICOLON
END_BODY
