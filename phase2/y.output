Terminals unused in grammar

   PROGRAM
   ELSEIF
   RETURN
   L_SQUARE_BRACKET
   R_SQUARE_BRACKET
   IF_PREC
   ELSE_PREC


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | function prog_start

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    4 declarations: declaration SEMICOLON declarations
    5             | %empty

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    7            | IDENT more_idents COLON INTEGER

    8 more_idents: COMMA IDENT more_idents
    9            | %empty

   10 statements: statements statement SEMICOLON
   11           | statement SEMICOLON

   12 statement: var ASSIGN expression
   13          | IF bool_exp THEN st_statement else_statement ENDIF
   14          | WHILE bool_exp BEGINLOOP st_statement ENDLOOP
   15          | DO BEGINLOOP st_statement ENDLOOP WHILE bool_exp
   16          | READ vars
   17          | WRITE vars
   18          | CONTINUE

   19 vars: vars COMMA var
   20     | var

   21 st_statement: statement SEMICOLON st_statement
   22             | %empty

   23 else_statement: ELSE st_statement
   24               | %empty

   25 bool_exp: relation_and_exp relationexplist

   26 relation_and_exp: relation_exp andlist

   27 relationexplist: OR relation_and_exp relationexplist
   28                | %empty

   29 andlist: AND relation_exp andlist
   30        | %empty

   31 relation_exp: NOT expression comp expression
   32             | NOT TRUE
   33             | NOT FALSE
   34             | NOT L_PAREN bool_exp R_PAREN
   35             | expression comp expression
   36             | TRUE
   37             | FALSE
   38             | L_PAREN bool_exp R_PAREN

   39 var: IDENT
   40    | IDENT L_PAREN expression R_PAREN

   41 expression: multiplicative_exp exp_list

   42 multiplicative_exp: term terms

   43 term: var
   44     | NUMBER
   45     | L_PAREN expression R_PAREN
   46     | SUB var
   47     | SUB NUMBER
   48     | SUB L_PAREN expression R_PAREN

   49 terms: %empty
   50      | terms MULT term
   51      | terms DIV term
   52      | terms MOD term

   53 exp_list: ADD multiplicative_exp exp_list
   54         | SUB multiplicative_exp exp_list
   55         | %empty

   56 comp: EQ
   57     | NEQ
   58     | LT
   59     | GT
   60     | LTE
   61     | GTE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258)
FUNCTION (259) 3
BEGIN_PARAMS (260) 3
END_PARAMS (261) 3
BEGIN_LOCALS (262) 3
END_LOCALS (263) 3
BEGIN_BODY (264) 3
END_BODY (265) 3
INTEGER (266) 6 7
ARRAY (267) 6
OF (268) 6
IF (269) 13
THEN (270) 13
ENDIF (271) 13
ELSE (272) 23
ELSEIF (273)
WHILE (274) 14 15
DO (275) 15
BEGINLOOP (276) 14 15
ENDLOOP (277) 14 15
CONTINUE (278) 18
READ (279) 16
WRITE (280) 17
RETURN (281)
NOT (282) 31 32 33 34
TRUE (283) 32 36
FALSE (284) 33 37
SEMICOLON (285) 3 4 10 11 21
COLON (286) 6 7
COMMA (287) 8 19
L_PAREN (288) 6 34 38 40 45 48
R_PAREN (289) 6 34 38 40 45 48
L_SQUARE_BRACKET (290)
R_SQUARE_BRACKET (291)
ASSIGN (292) 12
IDENT (293) 3 6 7 8 39 40
NUMBER (294) 6 44 47
OR (295) 27
AND (296) 29
SUB (297) 46 47 48 54
ADD (298) 53
MULT (299) 50
DIV (300) 51
MOD (301) 52
EQ (302) 56
NEQ (303) 57
LT (304) 58
GT (305) 59
LTE (306) 60
GTE (307) 61
IF_PREC (308)
ELSE_PREC (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog_start (56)
    on left: 1 2, on right: 0 2
function (57)
    on left: 3, on right: 2
declarations (58)
    on left: 4 5, on right: 3 4
declaration (59)
    on left: 6 7, on right: 4
more_idents (60)
    on left: 8 9, on right: 6 7 8
statements (61)
    on left: 10 11, on right: 3 10
statement (62)
    on left: 12 13 14 15 16 17 18, on right: 3 10 11 21
vars (63)
    on left: 19 20, on right: 16 17 19
st_statement (64)
    on left: 21 22, on right: 13 14 15 21 23
else_statement (65)
    on left: 23 24, on right: 13
bool_exp (66)
    on left: 25, on right: 13 14 15 34 38
relation_and_exp (67)
    on left: 26, on right: 25 27
relationexplist (68)
    on left: 27 28, on right: 25 27
andlist (69)
    on left: 29 30, on right: 26 29
relation_exp (70)
    on left: 31 32 33 34 35 36 37 38, on right: 26 29
var (71)
    on left: 39 40, on right: 12 19 20 43 46
expression (72)
    on left: 41, on right: 12 31 35 40 45 48
multiplicative_exp (73)
    on left: 42, on right: 41 53 54
term (74)
    on left: 43 44 45 46 47 48, on right: 42 50 51 52
terms (75)
    on left: 49 50 51 52, on right: 42 50 51 52
exp_list (76)
    on left: 53 54 55, on right: 41 53 54
comp (77)
    on left: 56 57 58 59 60 61, on right: 31 35


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    function    go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: function . prog_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 6
    function    go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    2 prog_start: function prog_start .

    $default  reduce using rule 2 (prog_start)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10
    declaration   go to state 11


State 9

    6 declaration: IDENT . more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    7            | IDENT . more_idents COLON INTEGER

    COMMA  shift, and go to state 12

    $default  reduce using rule 9 (more_idents)

    more_idents  go to state 13


State 10

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    4 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 12

    8 more_idents: COMMA . IDENT more_idents

    IDENT  shift, and go to state 16


State 13

    6 declaration: IDENT more_idents . COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    7            | IDENT more_idents . COLON INTEGER

    COLON  shift, and go to state 17


State 14

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 9

    $default  reduce using rule 5 (declarations)

    declarations  go to state 19
    declaration   go to state 11


State 16

    8 more_idents: COMMA IDENT . more_idents

    COMMA  shift, and go to state 12

    $default  reduce using rule 9 (more_idents)

    more_idents  go to state 20


State 17

    6 declaration: IDENT more_idents COLON . ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    7            | IDENT more_idents COLON . INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 11


State 19

    4 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 4 (declarations)


State 20

    8 more_idents: COMMA IDENT more_idents .

    $default  reduce using rule 8 (more_idents)


State 21

    7 declaration: IDENT more_idents COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    6 declaration: IDENT more_idents COLON ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 24


State 23

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 28


State 27

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statement SEMICOLON statements END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    statement  go to state 36
    var        go to state 37


State 28

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 38


State 29

   13 statement: IF . bool_exp THEN st_statement else_statement ENDIF

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    bool_exp            go to state 45
    relation_and_exp    go to state 46
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51


State 30

   14 statement: WHILE . bool_exp BEGINLOOP st_statement ENDLOOP

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    bool_exp            go to state 52
    relation_and_exp    go to state 46
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51


State 31

   15 statement: DO . BEGINLOOP st_statement ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 53


State 32

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


State 33

   16 statement: READ . vars

    IDENT  shift, and go to state 35

    vars  go to state 54
    var   go to state 55


State 34

   17 statement: WRITE . vars

    IDENT  shift, and go to state 35

    vars  go to state 56
    var   go to state 55


State 35

   39 var: IDENT .
   40    | IDENT . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 57

    $default  reduce using rule 39 (var)


State 36

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement . SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 58


State 37

   12 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 59


State 38

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 60


State 39

   31 relation_exp: NOT . expression comp expression
   32             | NOT . TRUE
   33             | NOT . FALSE
   34             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 61
    FALSE    shift, and go to state 62
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 64
    multiplicative_exp  go to state 50
    term                go to state 51


State 40

   36 relation_exp: TRUE .

    $default  reduce using rule 36 (relation_exp)


State 41

   37 relation_exp: FALSE .

    $default  reduce using rule 37 (relation_exp)


State 42

   38 relation_exp: L_PAREN . bool_exp R_PAREN
   45 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    bool_exp            go to state 65
    relation_and_exp    go to state 46
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 66
    multiplicative_exp  go to state 50
    term                go to state 51


State 43

   44 term: NUMBER .

    $default  reduce using rule 44 (term)


State 44

   46 term: SUB . var
   47     | SUB . NUMBER
   48     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 68

    var  go to state 69


State 45

   13 statement: IF bool_exp . THEN st_statement else_statement ENDIF

    THEN  shift, and go to state 70


State 46

   25 bool_exp: relation_and_exp . relationexplist

    OR  shift, and go to state 71

    $default  reduce using rule 28 (relationexplist)

    relationexplist  go to state 72


State 47

   26 relation_and_exp: relation_exp . andlist

    AND  shift, and go to state 73

    $default  reduce using rule 30 (andlist)

    andlist  go to state 74


State 48

   43 term: var .

    $default  reduce using rule 43 (term)


State 49

   35 relation_exp: expression . comp expression

    EQ   shift, and go to state 75
    NEQ  shift, and go to state 76
    LT   shift, and go to state 77
    GT   shift, and go to state 78
    LTE  shift, and go to state 79
    GTE  shift, and go to state 80

    comp  go to state 81


State 50

   41 expression: multiplicative_exp . exp_list

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 55 (exp_list)

    exp_list  go to state 84


State 51

   42 multiplicative_exp: term . terms

    $default  reduce using rule 49 (terms)

    terms  go to state 85


State 52

   14 statement: WHILE bool_exp . BEGINLOOP st_statement ENDLOOP

    BEGINLOOP  shift, and go to state 86


State 53

   15 statement: DO BEGINLOOP . st_statement ENDLOOP WHILE bool_exp

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    $default  reduce using rule 22 (st_statement)

    statement     go to state 87
    st_statement  go to state 88
    var           go to state 37


State 54

   16 statement: READ vars .
   19 vars: vars . COMMA var

    COMMA  shift, and go to state 89

    $default  reduce using rule 16 (statement)


State 55

   20 vars: var .

    $default  reduce using rule 20 (vars)


State 56

   17 statement: WRITE vars .
   19 vars: vars . COMMA var

    COMMA  shift, and go to state 89

    $default  reduce using rule 17 (statement)


State 57

   40 var: IDENT L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 91
    multiplicative_exp  go to state 50
    term                go to state 51


State 58

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON . statements END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    statements  go to state 92
    statement   go to state 93
    var         go to state 37


State 59

   12 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 94
    multiplicative_exp  go to state 50
    term                go to state 51


State 60

    6 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 61

   32 relation_exp: NOT TRUE .

    $default  reduce using rule 32 (relation_exp)


State 62

   33 relation_exp: NOT FALSE .

    $default  reduce using rule 33 (relation_exp)


State 63

   34 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   45 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    bool_exp            go to state 95
    relation_and_exp    go to state 46
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 66
    multiplicative_exp  go to state 50
    term                go to state 51


State 64

   31 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 75
    NEQ  shift, and go to state 76
    LT   shift, and go to state 77
    GT   shift, and go to state 78
    LTE  shift, and go to state 79
    GTE  shift, and go to state 80

    comp  go to state 96


State 65

   38 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 97


State 66

   35 relation_exp: expression . comp expression
   45 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 98
    EQ       shift, and go to state 75
    NEQ      shift, and go to state 76
    LT       shift, and go to state 77
    GT       shift, and go to state 78
    LTE      shift, and go to state 79
    GTE      shift, and go to state 80

    comp  go to state 81


State 67

   48 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 99
    multiplicative_exp  go to state 50
    term                go to state 51


State 68

   47 term: SUB NUMBER .

    $default  reduce using rule 47 (term)


State 69

   46 term: SUB var .

    $default  reduce using rule 46 (term)


State 70

   13 statement: IF bool_exp THEN . st_statement else_statement ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    $default  reduce using rule 22 (st_statement)

    statement     go to state 87
    st_statement  go to state 100
    var           go to state 37


State 71

   27 relationexplist: OR . relation_and_exp relationexplist

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    relation_and_exp    go to state 101
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51


State 72

   25 bool_exp: relation_and_exp relationexplist .

    $default  reduce using rule 25 (bool_exp)


State 73

   29 andlist: AND . relation_exp andlist

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    relation_exp        go to state 102
    var                 go to state 48
    expression          go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51


State 74

   26 relation_and_exp: relation_exp andlist .

    $default  reduce using rule 26 (relation_and_exp)


State 75

   56 comp: EQ .

    $default  reduce using rule 56 (comp)


State 76

   57 comp: NEQ .

    $default  reduce using rule 57 (comp)


State 77

   58 comp: LT .

    $default  reduce using rule 58 (comp)


State 78

   59 comp: GT .

    $default  reduce using rule 59 (comp)


State 79

   60 comp: LTE .

    $default  reduce using rule 60 (comp)


State 80

   61 comp: GTE .

    $default  reduce using rule 61 (comp)


State 81

   35 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 103
    multiplicative_exp  go to state 50
    term                go to state 51


State 82

   54 exp_list: SUB . multiplicative_exp exp_list

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    multiplicative_exp  go to state 104
    term                go to state 51


State 83

   53 exp_list: ADD . multiplicative_exp exp_list

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    multiplicative_exp  go to state 105
    term                go to state 51


State 84

   41 expression: multiplicative_exp exp_list .

    $default  reduce using rule 41 (expression)


State 85

   42 multiplicative_exp: term terms .
   50 terms: terms . MULT term
   51      | terms . DIV term
   52      | terms . MOD term

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107
    MOD   shift, and go to state 108

    $default  reduce using rule 42 (multiplicative_exp)


State 86

   14 statement: WHILE bool_exp BEGINLOOP . st_statement ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    $default  reduce using rule 22 (st_statement)

    statement     go to state 87
    st_statement  go to state 109
    var           go to state 37


State 87

   21 st_statement: statement . SEMICOLON st_statement

    SEMICOLON  shift, and go to state 110


State 88

   15 statement: DO BEGINLOOP st_statement . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 111


State 89

   19 vars: vars COMMA . var

    IDENT  shift, and go to state 35

    var  go to state 112


State 90

   45 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 113
    multiplicative_exp  go to state 50
    term                go to state 51


State 91

   40 var: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114


State 92

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements . END_BODY
   10 statements: statements . statement SEMICOLON

    END_BODY  shift, and go to state 115
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    statement  go to state 116
    var        go to state 37


State 93

   11 statements: statement . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 94

   12 statement: var ASSIGN expression .

    $default  reduce using rule 12 (statement)


State 95

   34 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 118


State 96

   31 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var                 go to state 48
    expression          go to state 119
    multiplicative_exp  go to state 50
    term                go to state 51


State 97

   38 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 38 (relation_exp)


State 98

   45 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 45 (term)


State 99

   48 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 120


State 100

   13 statement: IF bool_exp THEN st_statement . else_statement ENDIF

    ELSE  shift, and go to state 121

    $default  reduce using rule 24 (else_statement)

    else_statement  go to state 122


State 101

   27 relationexplist: OR relation_and_exp . relationexplist

    OR  shift, and go to state 71

    $default  reduce using rule 28 (relationexplist)

    relationexplist  go to state 123


State 102

   29 andlist: AND relation_exp . andlist

    AND  shift, and go to state 73

    $default  reduce using rule 30 (andlist)

    andlist  go to state 124


State 103

   35 relation_exp: expression comp expression .

    $default  reduce using rule 35 (relation_exp)


State 104

   54 exp_list: SUB multiplicative_exp . exp_list

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 55 (exp_list)

    exp_list  go to state 125


State 105

   53 exp_list: ADD multiplicative_exp . exp_list

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 55 (exp_list)

    exp_list  go to state 126


State 106

   50 terms: terms MULT . term

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var   go to state 48
    term  go to state 127


State 107

   51 terms: terms DIV . term

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var   go to state 48
    term  go to state 128


State 108

   52 terms: terms MOD . term

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    var   go to state 48
    term  go to state 129


State 109

   14 statement: WHILE bool_exp BEGINLOOP st_statement . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 110

   21 st_statement: statement SEMICOLON . st_statement

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    $default  reduce using rule 22 (st_statement)

    statement     go to state 87
    st_statement  go to state 131
    var           go to state 37


State 111

   15 statement: DO BEGINLOOP st_statement ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 132


State 112

   19 vars: vars COMMA var .

    $default  reduce using rule 19 (vars)


State 113

   45 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 98


State 114

   40 var: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 40 (var)


State 115

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY .

    $default  reduce using rule 3 (function)


State 116

   10 statements: statements statement . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 117

   11 statements: statement SEMICOLON .

    $default  reduce using rule 11 (statements)


State 118

   34 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 34 (relation_exp)


State 119

   31 relation_exp: NOT expression comp expression .

    $default  reduce using rule 31 (relation_exp)


State 120

   48 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (term)


State 121

   23 else_statement: ELSE . st_statement

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    IDENT     shift, and go to state 35

    $default  reduce using rule 22 (st_statement)

    statement     go to state 87
    st_statement  go to state 134
    var           go to state 37


State 122

   13 statement: IF bool_exp THEN st_statement else_statement . ENDIF

    ENDIF  shift, and go to state 135


State 123

   27 relationexplist: OR relation_and_exp relationexplist .

    $default  reduce using rule 27 (relationexplist)


State 124

   29 andlist: AND relation_exp andlist .

    $default  reduce using rule 29 (andlist)


State 125

   54 exp_list: SUB multiplicative_exp exp_list .

    $default  reduce using rule 54 (exp_list)


State 126

   53 exp_list: ADD multiplicative_exp exp_list .

    $default  reduce using rule 53 (exp_list)


State 127

   50 terms: terms MULT term .

    $default  reduce using rule 50 (terms)


State 128

   51 terms: terms DIV term .

    $default  reduce using rule 51 (terms)


State 129

   52 terms: terms MOD term .

    $default  reduce using rule 52 (terms)


State 130

   14 statement: WHILE bool_exp BEGINLOOP st_statement ENDLOOP .

    $default  reduce using rule 14 (statement)


State 131

   21 st_statement: statement SEMICOLON st_statement .

    $default  reduce using rule 21 (st_statement)


State 132

   15 statement: DO BEGINLOOP st_statement ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 35
    NUMBER   shift, and go to state 43
    SUB      shift, and go to state 44

    bool_exp            go to state 136
    relation_and_exp    go to state 46
    relation_exp        go to state 47
    var                 go to state 48
    expression          go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51


State 133

   10 statements: statements statement SEMICOLON .

    $default  reduce using rule 10 (statements)


State 134

   23 else_statement: ELSE st_statement .

    $default  reduce using rule 23 (else_statement)


State 135

   13 statement: IF bool_exp THEN st_statement else_statement ENDIF .

    $default  reduce using rule 13 (statement)


State 136

   15 statement: DO BEGINLOOP st_statement ENDLOOP WHILE bool_exp .

    $default  reduce using rule 15 (statement)
